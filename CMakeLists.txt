cmake_minimum_required(VERSION 3.20)
project(ONTR-MENU-TEMPLATE LANGUAGES CXX)

# C++标准设置
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# 输出目录设置
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${CMAKE_BINARY_DIR}/build")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${CMAKE_BINARY_DIR}/build")

# 源文件收集
file(GLOB_RECURSE CORE_SOURCES
    "${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/main.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI/*.cpp"
    "${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/VendorModle/*.cpp"
)

# 可执行文件
add_executable(ONTR-MENU ${CORE_SOURCES})

# 包含目录
target_include_directories(ONTR-MENU PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI/ImGui
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI/DeviceIO
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI/Elements
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/GUI/Languages

    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/HACK
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/SDK
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/include

    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/VendorModle
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/VendorModle/Resources
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/nlohmann
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/stb
    ${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/NVIDIA-SDK
)

# 链接库
target_link_libraries(ONTR-MENU PRIVATE
    d3d11.lib
    winhttp.lib
    "${CMAKE_CURRENT_SOURCE_DIR}/ONTR-MENU/lib/NVIDIA-SDK/nvapi64.lib"
)

# 编译选项
if(MSVC)
    target_compile_options(ONTR-MENU PRIVATE /utf-8 /permissive-)
endif()

# Ninja 构建选项
option(USE_NINJA "Use Ninja as the build system" ON)
if(USE_NINJA)
    set(CMAKE_GENERATOR "Ninja" CACHE STRING "" FORCE)
endif()
